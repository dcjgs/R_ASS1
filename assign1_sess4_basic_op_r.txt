. Create the vectors
(a) (2, 3, ... , 29, 30)
Soln :
> tmp <- c(2:30)
> tmp
 [1]  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30

(b) (30, 29, ... , 2)
Soln :
> tmp1 <- c(30:2)
> tmp1
 [1] 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2

(c) (1, 2, 3, .... , 29, 30, 29, 28, , 2, 1)
> tmp <- c(1:30)
> tmp1 <- c(29:1)
> jn <- c(tmp,tmp1)
> jn
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 29 28 27 26 25 24 23
[38] 22 21 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1
> 

OR
> jn2 <- c(1:30,29:1)
> jn2
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 29 28 27 26 25 24 23
[38] 22 21 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1
> 


(d) (4, 6, 3) and assign it to the name dev.
Soln :
> dev <- c(4, 6, 3)
> dev
[1] 4 6 3


For parts (e), (f) and (g) .
(e) (5, 6, 7, 5, 6, 7, , 5, 6, 7) where there are 10 occurrences of 5.
rep.int(x, times)
Soln :
> rep(5:7,10)
 [1] 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7 5 6 7
> 

(f) (5, 6, 7, 5, 6, 7, , 5, 6, 7, 5) where there are 11 occurrences of 5, 10 occurrences of 6 and 10
occurrences of 7.
Soln :
> rep(5:7,c(11,10,10))
 [1] 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7
> rep(5:7,times=c(11,10,10))
 [1] 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7
> 

(g) (4, 4, , 4, 6, 6, , 6, 3, 3, , 3) where there are 10 occurrences of 4, 20 occurrences of 6 and 30
occurrences of 3.
Soln :
> dev <- c(4, 6, 3)
> dev
[1] 4 6 3
> rep(dev,times=c(10,20,30))
 [1] 4 4 4 4 4 4 4 4 4 4 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
[56] 3 3 3 3 3
> 

2. Create a vector of the values of eX sin(x) at x = 3, 3.1, 3.2, , 6.
Soln :
> tmp <- seq(3,6,by=0.1)
> exp(tmp)*sin(tmp)
 [1]    2.8344711    0.9230055   -1.4320654   -4.2769020   -7.6570591  -11.6163451  -16.1954669  -21.4304437
 [9]  -27.3507725  -33.9773327  -41.3200162  -49.3750762  -58.1221905  -67.5212405  -77.5088155  -87.9944570
[17]  -98.8566695 -109.9387348 -121.0443775 -131.9333449 -142.3169809 -151.8538900 -160.1458060 -166.7338044
[25] -171.0950158 -172.6400256 -170.7111690 -164.5819569 -153.4578954 -136.4789910 -112.7242573
> 

3. Execute the following lines which create two vectors of random integers which are chosen with
replacement from the integers 0, 1, : : : , 999. Both vectors have length 250.
set.seed(100)
x <- Sample (0:999, 250, replace=T)
y <- Sample (0:999, 250, replace=T)
Soln :

  x <- c(0:999, 250, replace=T)
y <- c(0:999, 250, replace=T)

(a) Identify out the values in y which are > 500.
Soln :
y[y>500]
(b) Identify the index positions in y of the values which are > 700?
(1:length(y))[y>700]
or
which(y>700)

(c) What are the values in x which are in Same index position to the values in y which are > 400?
Soln :
x[y>400]

(d) How many values in y are within 200 of the maximum value of the terms in y?
Soln :
> sum( y>max(y)-200 )
[1] 200
(e) How many numbers in x are divisible by 2?
Soln :
> sum(x%%2==0)
[1] 501
(f) Sort the numbers in the vector x in the order of increasing values in y.
x[order(y)]
(g) Create the vector (x1 + 2x2 - x3; x2 + 2x3 -x4 ,, xn-2 + 2xn-1 - xn).
x[-c(249,250)] + 2*x[-c(1,250)]-x[-c(1,2)]
or for any length of
x
,
xLen <- length(x)
x[-c(xLen -1,xLen )] + 2*x[-c(1,xLen )] - x[-c(1,2)]
(h) Calculate:


4. Use the function paste to create the following character vectors of length 30:
(a) ("Label 1", "Label 2", ....., "Label 30").
> paste("label", 1:30)
 [1] "label 1"  "label 2"  "label 3"  "label 4"  "label 5"  "label 6"  "label 7"  "label 8"  "label 9"  "label 10"
[11] "label 11" "label 12" "label 13" "label 14" "label 15" "label 16" "label 17" "label 18" "label 19" "label 20"
[21] "label 21" "label 22" "label 23" "label 24" "label 25" "label 26" "label 27" "label 28" "label 29" "label 30"